---
source: sapiens_tools/src/python/mod.rs
expression: code
---
class Tools:
    """Wrapper for the tools."""
    def __init__(self, toolbox):
        self.toolbox = toolbox
    def conclude(self, conclusion, original_question):
        """    A tool to conclude a task.
        You have to use this to once you have the answer to the task with your
        conclusion.
        Args:
            conclusion: <str> The final answer for this task. Plain text ONLY. No string interpolation
                supported. MANDATORY. Call directly from `SandboxPython` Tool for long
                answers.
            original_question: <str> The original question that was asked to the user. No string
                interpolation supported, only plain text. MANDATORY.
        """
        return self.toolbox.invoke("Conclude", {"conclusion": conclusion, "original_question": original_question})
    def Conclude(self, conclusion, original_question):
        """    A tool to conclude a task.
        You have to use this to once you have the answer to the task with your
        conclusion.
        Args:
            conclusion: <str> The final answer for this task. Plain text ONLY. No string interpolation
                supported. MANDATORY. Call directly from `SandboxPython` Tool for long
                answers.
            original_question: <str> The original question that was asked to the user. No string
                interpolation supported, only plain text. MANDATORY.
        """
        return self.toolbox.invoke("Conclude", {"conclusion": conclusion, "original_question": original_question})
    def list(self):
        """List the tools."""
        return self.toolbox.list()
tools = Tools(toolbox)

# ======== user code

arxiv_results = Arxiv(
  search_query='cat:cs.AI',
  max_results=5,
  sort_by='lastUpdatedDate',
  sort_order='descending',
  show_summary=True
)

formatted_results = []
for result in arxiv_results['result']:
    formatted_results.append(f"{result['title']} : {result['pdf_url']}")
formatted_results = "\n".join(formatted_results)

print({'formatted_results': formatted_results})

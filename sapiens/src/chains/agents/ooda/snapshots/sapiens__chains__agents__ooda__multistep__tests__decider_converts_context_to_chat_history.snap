---
source: sapiens/src/chains/agents/ooda/multistep.rs
expression: chat_history
---
Ok(
    ChatHistory {
        config: Config {
            max_steps: 10,
            chain_type: SingleStepOODA,
            min_tokens_for_completion: 256,
            max_tokens: None,
        },
        max_token: 4096,
        context: [
            [system]: You are part of Sapiens agents and your role is to decide what need to be done based on the observations and guidance you got.,
            [user]: You are part of a group of cooperating assistants named Sapiens. Use available tools to answer the question as best as you can.
            You will collectively proceed iteratively using an OODA loop. Don't overstep your role.
            
            - Action response will be provided. 
            - Never produce the response of an Action. 
            - Only use YAML for the Action.
            - The loop will repeated until you have the answer to the original question. 
            - No task is complete until the Conclude Tool is used to provide the answer. 
            
            # Format of your response
            
            You must use the following format for your response. Comments are in bold and should be removed from your response.
            ====================
            ## Decision: 
            **Decide what to do first to answer the question. Why? How will you if it succeeds? How will you if it fails?**
            - <...>
            ====================
            
            # The following are the ONLY Tools one can use for the Actions:
            [],
        ],
        examples: [
            (
                [user]: # Your turn
                Original question: Sort in ascending order: [2, 3, 1, 4, 5]
                What is your decision?,
                [assistant]: ## Decision:
                - We can use the sorted() function of Python to sort the list.,
            ),
            (
                [user]: ## The ONLY Action:
                ```yaml
                tool_name: SandboxedPython
                parameters:
                  code: |
                    lst = [2, 3, 1, 4, 5]
                    sorted